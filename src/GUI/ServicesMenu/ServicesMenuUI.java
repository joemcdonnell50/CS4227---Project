/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI.ServicesMenu;

import DatabaseManager.DatabaseOperations;
import HotelSystem.PanelOperations.AddServicesOperation;
import GUI.ButtonHandler;
import HotelSystem.Entities.Service;
import HotelSystem.Services.ServicePackageBuilder;
import java.awt.BorderLayout;
import java.awt.FlowLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.JButton;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 *
 * @author Liam
 */
public class ServicesMenuUI extends javax.swing.JFrame {

    /**
     * Creates new form ServicesMenuUI
     */
    
    private javax.swing.JPanel jPanel1;
     private javax.swing.JPanel btnPanel;
    private javax.swing.JScrollPane jScrollPane1;
    public static javax.swing.JTable jTable1;
    
    private javax.swing.JButton IncludeServicesButton;
    private javax.swing.JButton ServicesBackButton;

    
    
    private static Object[][] rowData;
    
    private Boolean sauna = false;
    private Boolean hammam = false;
    private Boolean pool = false;
    private double totalServicePrice = 0;
    
    
    public ServicesMenuUI(Object[][] data) {
        System.out.println("Before data");
        this.rowData = data;
        System.out.println("After Data");
        
        //int rowCount = 0;
        for (Object[] rowData1 : data) {
            for (Object rowData11 : rowData1) {
                //rowData[i][j]=data[i][j];
                System.out.println(rowData11);
            }
        }
        initComponents();
        System.out.println("After init comp");
        this.setLocationRelativeTo(null);
    }

               
        //System.out.println("Row Data......");
        //System.out.println(rowData[1][1]);
        
    
    public void makeVisible(){
        this.setVisible(true);
    }
    
    public void makeNonVisible(){
        this.setVisible(false);
    }
    
    public double getTotalServicePrice(){
        return totalServicePrice;
    }
    
    private void calculateServicePrice() {
        
        for(int i=0;i<jTable1.getRowCount();i++)
              {
 
               Boolean checked = Boolean.valueOf(jTable1.getValueAt(i, 2).toString());
               
                if(checked)
                {
                    System.out.println("TotalServicePrice" + totalServicePrice);
                    
                    totalServicePrice = Integer.parseInt(jTable1.getValueAt(i, 1).toString()) + totalServicePrice;
                    System.out.println("MAde it to if");
                    System.out.println(totalServicePrice);
                }
              }
        sauna = Boolean.valueOf(jTable1.getValueAt(0, 2).toString());
        hammam = Boolean.valueOf(jTable1.getValueAt(1, 2).toString());
        pool = Boolean.valueOf(jTable1.getValueAt(2, 2).toString());
        
        AddServicesOperation.createServicesPackage(sauna, hammam, pool, totalServicePrice);
    }
    

    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {
        /*
        System.out.println("InitComponents");
        jPanel1 = new javax.swing.JPanel();
        BackButton = new javax.swing.JButton();
        IncludeServicesButton = new javax.swing.JButton();
        jTable1 = new javax.swing.JTable();
        */
        jPanel1 = new JPanel(new BorderLayout());
        btnPanel = new JPanel(new FlowLayout(FlowLayout.TRAILING));
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        
        
        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        IncludeServicesButton = new IncludeServicesButton();
        IncludeServicesButton.setFont(new java.awt.Font("Dialog", 0, 14));
        IncludeServicesButton.setText("Include Services");
        
        ServicesBackButton = new ServicesBackButton();
        ServicesBackButton.setFont(new java.awt.Font("Dialog", 0, 14));
        ServicesBackButton.setText("Back");
        
        
        
        
        
        
        
        ButtonHandler vf = new ButtonHandler();
        IncludeServicesButton.addActionListener(vf);
        
        ServicesBackButton.addActionListener(vf);

        System.out.println("Got This far2");
        //DefaultTableModel model =
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            
            
            rowData,
            new String [] {
                 "Service Name", "Service Price", "Add"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Integer.class, java.lang.Boolean.class,
            };
            boolean[] canEdit = new boolean [] {
                false, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });

        jScrollPane1.setViewportView(jTable1);
        System.out.println("After Table filling");

        
        //Calculate service price on button
        
        
        
        
        
      
       
        
        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(186, 186, 186)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 395, Short.MAX_VALUE)
                .addComponent(IncludeServicesButton, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(ServicesBackButton, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)

//.addGap(186, 186, 186) 
                .addContainerGap(185, Short.MAX_VALUE))    
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                //.addContainerGap(272, Short.MAX_VALUE)
                   
                    .addGap(0,0,0)
                    
                .addComponent(IncludeServicesButton, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(ServicesBackButton, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)

                .addGap(0, 11, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap()
            )
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap()
            )
        );

        pack(); 
        
        
        IncludeServicesButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent vf) {
                System.out.println("Action listener for includes services button");
              calculateServicePrice();
              
              System.out.println("end of for");

            }

            
        });
        

    }          
                         
    
    
    //private javax.swing.JPanel jPanel1;
    // End of variables declaration  
    
}

